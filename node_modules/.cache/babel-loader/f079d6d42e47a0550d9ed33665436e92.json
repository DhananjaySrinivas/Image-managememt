{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst galleryInitialState = {\n  images: [],\n  dummyImages: [],\n  searchTerm: \"\",\n  selectAll: false,\n  isSelected: false\n};\nconst gallerySlice = createSlice({\n  name: 'gallery',\n  initialState: galleryInitialState,\n  reducers: {\n    addToGallery(state, action) {\n      const newImage = action.payload;\n      const existingImg = state.images.find(img => img.id === newImg.id);\n\n      if (!existingImg) {\n        state.images.push({\n          id: newImage.id,\n          url: newImg.url,\n          name: newImg.name,\n          description: newImg.description,\n          height: newImg.height,\n          width: newImg.width,\n          date: newImg.date,\n          isChecked: newImg.isChecked\n        });\n      }\n    },\n\n    addToDummyGallery(state, action) {\n      const newImg = action.payload;\n      const existingImg = state.images.find(img => img.id === newImg.id);\n\n      if (!existingImg) {\n        const newImg = action.payload;\n        state.dummyImages.push({\n          id: newImg.id,\n          url: newImg.url,\n          name: newImg.name,\n          description: newImg.description,\n          height: newImg.height,\n          width: newImg.width,\n          date: newImg.date,\n          isChecked: newImg.isChecked\n        });\n      }\n    },\n\n    removeImgFromGallery(state, action) {\n      state.images = state.images.filter(img => img.isChecked !== true);\n    },\n\n    updateSelectAll(state) {\n      state.selectAll = !state.selectAll;\n\n      if (state.selectAll) {\n        state.images.forEach(img => img.isChecked = true);\n      } else {\n        state.images.forEach(img => img.isChecked = false);\n      }\n\n      state.isSelected = state.images.some(img => img.isChecked === true);\n    },\n\n    updateSearchTerm(state, action) {\n      const searchTerm = action.payload;\n      state.searchTerm = searchTerm;\n    },\n\n    updateImgToSelected(state, action) {\n      const id = action.payload;\n      const existingImg = state.images.find(img => img.id === id);\n      existingImg.isChecked = !existingImg.isChecked;\n      state.isSelected = state.images.some(img => img.isChecked === true);\n    },\n\n    sortByTitle(state) {\n      state.images = state.images.sort((imgA, imgB) => {\n        if (imgA.description === null) return -1;else if (imgB.description === null) return 1;else {\n          return imgA.description.split(' ')[0] - imgB.description.split(' ')[0];\n        }\n      });\n    },\n\n    sortByDate(state) {\n      state.images = state.images.sort((imgA, imgB) => new Date(imgA.date) - new Date(imgB.date));\n    },\n\n    sortBySize(state) {\n      state.images = state.images.sort((imgA, imgB) => imgA.height * imgA.width - imgB.height * imgB.width);\n    }\n\n  }\n});\nexport const galleryActions = gallerySlice.actions;\nexport default gallerySlice;","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/img-managememt-app-main/src/store/images-slice.js"],"names":["createSlice","galleryInitialState","images","dummyImages","searchTerm","selectAll","isSelected","gallerySlice","name","initialState","reducers","addToGallery","state","action","newImage","payload","existingImg","find","img","id","newImg","push","url","description","height","width","date","isChecked","addToDummyGallery","removeImgFromGallery","filter","updateSelectAll","forEach","some","updateSearchTerm","updateImgToSelected","sortByTitle","sort","imgA","imgB","split","sortByDate","Date","sortBySize","galleryActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst galleryInitialState = { images: [], dummyImages:[], searchTerm: \"\", selectAll: false, isSelected: false };\r\n\r\nconst gallerySlice = createSlice({\r\n    name: 'gallery',\r\n    initialState : galleryInitialState,\r\n    reducers : {\r\n        addToGallery(state, action) {\r\n            const newImage = action.payload;\r\n            const existingImg = state.images.find(img=> img.id === newImg.id);\r\n\r\n            if(!existingImg) {\r\n                state.images.push({\r\n                    id: newImage.id,\r\n                    url: newImg.url,\r\n                    name: newImg.name,\r\n                    description: newImg.description,\r\n                    height: newImg.height,\r\n                    width: newImg.width,\r\n                    date: newImg.date,\r\n                    isChecked: newImg.isChecked\r\n                });\r\n            }\r\n        },\r\n        addToDummyGallery(state, action) {\r\n            const newImg = action.payload;\r\n            const existingImg = state.images.find(img=> img.id === newImg.id);\r\n\r\n            if(!existingImg) {\r\n            const newImg = action.payload;\r\n                state.dummyImages.push({\r\n                    id: newImg.id,\r\n                    url: newImg.url,\r\n                    name: newImg.name,\r\n                    description: newImg.description,\r\n                    height: newImg.height,\r\n                    width: newImg.width,\r\n                    date: newImg.date,\r\n                    isChecked: newImg.isChecked\r\n                });\r\n            }\r\n        },\r\n        removeImgFromGallery(state, action) {\r\n            state.images = state.images.filter(img => img.isChecked !== true);\r\n        },\r\n        updateSelectAll(state) {\r\n            state.selectAll = !state.selectAll;\r\n                \r\n            if(state.selectAll) {\r\n                state.images.forEach(img => img.isChecked = true);\r\n            } else {\r\n                state.images.forEach(img => img.isChecked = false);\r\n            }\r\n            state.isSelected = state.images.some(img => img.isChecked === true);\r\n        },\r\n\r\n        updateSearchTerm(state, action) {\r\n            const searchTerm = action.payload;\r\n            state.searchTerm = searchTerm;\r\n        },\r\n\r\n        updateImgToSelected(state, action) {\r\n            const id = action.payload;\r\n            const existingImg = state.images.find(img => img.id === id);\r\n            existingImg.isChecked = !existingImg.isChecked;\r\n            state.isSelected = state.images.some(img => img.isChecked === true);\r\n        },\r\n\r\n\r\n      \r\n        sortByTitle(state) {\r\n            state.images = state.images.sort((imgA, imgB) => {\r\n                if(imgA.description === null) return -1;\r\n                else if(imgB.description === null) return 1;\r\n                else {\r\n                    return imgA.description.split(' ')[0] - imgB.description.split(' ')[0];\r\n                }\r\n                \r\n            })\r\n        },\r\n        sortByDate(state) {\r\n            state.images = state.images.sort((imgA, imgB) => new Date(imgA.date) - new Date(imgB.date));\r\n        },\r\n        sortBySize(state) {\r\n            state.images = state.images.sort((imgA, imgB) => (imgA.height * imgA.width) - (imgB.height * imgB.width));\r\n        }\r\n    }\r\n})\r\nexport const galleryActions = gallerySlice.actions;\r\nexport default gallerySlice;"]},"metadata":{},"sourceType":"module"}