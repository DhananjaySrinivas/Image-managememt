{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhananjay srinivas\\\\Desktop\\\\REACT\\\\img-managememt-app-main\\\\src\\\\components\\\\Image\\\\Image.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { galleryActions } from \"../../store/images-slice\";\nimport classes from './Image.module.css';\nimport imgLargeClasses from './ImageLarge.module.css';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Image(_ref) {\n  _s();\n\n  let {\n    id,\n    url,\n    description,\n    name,\n    isChecked,\n    showSelectButton,\n    onClick,\n    className\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const imageCheckedHandler = () => {\n    dispatch(galleryActions.updateImgToSelected(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: a => onClick && onClick(a),\n      src: url,\n      className: className || classes.img,\n      alt: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), showSelectButton && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: classes.checkbox,\n      onChange: imageCheckedHandler,\n      checked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.caption,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Image, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Image;\nImage.defaultProps = {\n  isChecked: false,\n  showSelectButton: true,\n  className: ''\n};\nImage.propTypes = {\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool,\n  showSelectButton: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string\n};\n\nfunction ImageLarge(_ref2) {\n  let {\n    id,\n    url,\n    description,\n    name,\n    isChecked,\n    showSelectButton,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Image, {\n    id,\n    url,\n    description,\n    name,\n    isChecked,\n    showSelectButton,\n    onClick,\n    className: imgLargeClasses.img\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = ImageLarge;\nexport default Image;\nImageLarge.propTypes = {\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool,\n  showSelectButton: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport { ImageLarge };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Image\");\n$RefreshReg$(_c2, \"ImageLarge\");","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/img-managememt-app-main/src/components/Image/Image.js"],"names":["useDispatch","galleryActions","classes","imgLargeClasses","PropTypes","Image","id","url","description","name","isChecked","showSelectButton","onClick","className","dispatch","imageCheckedHandler","updateImgToSelected","a","img","checkbox","caption","defaultProps","propTypes","string","isRequired","bool","func","ImageLarge"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAGA,SAASC,KAAT,OAA8F;AAAA;;AAAA,MAA/E;AAACC,IAAAA,EAAD;AAAKC,IAAAA,GAAL;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA,gBAAxC;AAA0DC,IAAAA,OAA1D;AAAmEC,IAAAA;AAAnE,GAA+E;AAC1F,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AACA,QAAMe,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,QAAQ,CAACb,cAAc,CAACe,mBAAf,CAAmCV,EAAnC,CAAD,CAAR;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,OAAO,EAAGW,CAAD,IAAOL,OAAO,IAAIA,OAAO,CAACK,CAAD,CAAvC;AAA4C,MAAA,GAAG,EAAEV,GAAjD;AAAsD,MAAA,SAAS,EAAEM,SAAS,IAAIX,OAAO,CAACgB,GAAtF;AAA2F,MAAA,GAAG,EAAEV;AAAhG;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,gBAAgB,iBAAI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAET,OAAO,CAACiB,QAA1C;AAAoD,MAAA,QAAQ,EAAEJ,mBAA9D;AACd,MAAA,OAAO,EAAEL;AADK;AAAA;AAAA;AAAA;AAAA,YAFzB,eAII;AAAG,MAAA,SAAS,EAAER,OAAO,CAACkB,OAAtB;AAAA,gBAAgCX;AAAhC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH;;GAbQJ,K;UACYL,W;;;KADZK,K;AAeTA,KAAK,CAACgB,YAAN,GAAqB;AACjBX,EAAAA,SAAS,EAAE,KADM;AAEjBC,EAAAA,gBAAgB,EAAE,IAFD;AAGjBE,EAAAA,SAAS,EAAE;AAHM,CAArB;AAMAR,KAAK,CAACiB,SAAN,GAAkB;AACdhB,EAAAA,EAAE,EAAEF,SAAS,CAACmB,MAAV,CAAiBC,UADP;AAEdhB,EAAAA,WAAW,EAAEJ,SAAS,CAACmB,MAAV,CAAiBC,UAFhB;AAGdjB,EAAAA,GAAG,EAAEH,SAAS,CAACmB,MAAV,CAAiBC,UAHR;AAIdf,EAAAA,IAAI,EAAEL,SAAS,CAACmB,MAAV,CAAiBC,UAJT;AAKdd,EAAAA,SAAS,EAAEN,SAAS,CAACqB,IALP;AAMdd,EAAAA,gBAAgB,EAAEP,SAAS,CAACqB,IANd;AAOdb,EAAAA,OAAO,EAAER,SAAS,CAACsB,IAPL;AAQdb,EAAAA,SAAS,EAAET,SAAS,CAACmB;AARP,CAAlB;;AAYA,SAASI,UAAT,QAAuF;AAAA,MAAnE;AAACrB,IAAAA,EAAD;AAAKC,IAAAA,GAAL;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA,gBAAxC;AAA0DC,IAAAA;AAA1D,GAAmE;AACnF,sBAAO,QAAC,KAAD;AAAYN,IAAAA,EAAZ;AAAgBC,IAAAA,GAAhB;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA,IAAlC;AAAwCC,IAAAA,SAAxC;AAAmDC,IAAAA,gBAAnD;AAAqEC,IAAAA,OAArE;AAA8EC,IAAAA,SAAS,EAACV,eAAe,CAACe;AAAxG;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;MAFQS,U;AAIT,eAAetB,KAAf;AAEAsB,UAAU,CAACL,SAAX,GAAuB;AACnBhB,EAAAA,EAAE,EAAEF,SAAS,CAACmB,MAAV,CAAiBC,UADF;AAEnBhB,EAAAA,WAAW,EAAEJ,SAAS,CAACmB,MAAV,CAAiBC,UAFX;AAGnBjB,EAAAA,GAAG,EAAEH,SAAS,CAACmB,MAAV,CAAiBC,UAHH;AAInBf,EAAAA,IAAI,EAAEL,SAAS,CAACmB,MAAV,CAAiBC,UAJJ;AAKnBd,EAAAA,SAAS,EAAEN,SAAS,CAACqB,IALF;AAMnBd,EAAAA,gBAAgB,EAAEP,SAAS,CAACqB,IANT;AAOnBb,EAAAA,OAAO,EAAER,SAAS,CAACsB;AAPA,CAAvB;AAUA,SAAQC,UAAR","sourcesContent":["import {useDispatch} from \"react-redux\";\r\nimport {galleryActions} from \"../../store/images-slice\";\r\nimport classes from './Image.module.css';\r\nimport imgLargeClasses from './ImageLarge.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Image({id, url, description, name, isChecked, showSelectButton, onClick, className}) {\r\n    const dispatch = useDispatch()\r\n    const imageCheckedHandler = () => {\r\n        dispatch(galleryActions.updateImgToSelected(id));\r\n    }\r\n    return (\r\n        <>\r\n            <img onClick={(a) => onClick && onClick(a)} src={url} className={className || classes.img} alt={description}></img>\r\n            {showSelectButton && <input type=\"checkbox\" className={classes.checkbox} onChange={imageCheckedHandler}\r\n                   checked={isChecked}></input>}\r\n            <p className={classes.caption}>{name}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nImage.defaultProps = {\r\n    isChecked: false,\r\n    showSelectButton: true,\r\n    className: '',\r\n}\r\n\r\nImage.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isChecked: PropTypes.bool,\r\n    showSelectButton: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    className: PropTypes.string,\r\n}\r\n\r\n\r\nfunction ImageLarge({id, url, description, name, isChecked, showSelectButton, onClick}){\r\n    return <Image {...{id, url, description, name, isChecked, showSelectButton, onClick, className:imgLargeClasses.img}} />\r\n}\r\n\r\nexport default Image\r\n\r\nImageLarge.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isChecked: PropTypes.bool,\r\n    showSelectButton: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport {ImageLarge}"]},"metadata":{},"sourceType":"module"}