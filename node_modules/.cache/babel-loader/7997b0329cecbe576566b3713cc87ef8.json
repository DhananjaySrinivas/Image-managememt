{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst galleryInitialState = {\n  images: [],\n  dummyImages,\n  searchTerm: \"\",\n  selectAll: false,\n  isSelected: false\n};\nconst gallerySlice = createSlice({\n  name: 'gallery',\n  initialState: galleryInitialState,\n  reducers: {\n    addToGallery(state, action) {\n      const newImage = action.payload; // console.log(newImage);\n\n      const existingImage = state.images.find(image => image.id === newImage.id);\n\n      if (!existingImage) {\n        state.images.push({\n          id: newImage.id,\n          url: newImage.url,\n          name: newImage.name,\n          description: newImage.description,\n          height: newImage.height,\n          width: newImage.width,\n          date: newImage.date,\n          isChecked: newImage.isChecked\n        });\n      }\n    },\n\n    addToDummyGallery(state, action) {\n      console.log(action.payload);\n      state.dummyImages.push(action.payload);\n    },\n\n    removeImgFromGallery(state) {\n      state.images = state.images.filter(image => image.isChecked !== true);\n    },\n\n    updateSelectAll(state) {\n      state.selectAll = !state.selectAll;\n\n      if (state.selectAll) {\n        state.images.forEach(image => image.isChecked = true);\n      } else {\n        state.images.forEach(image => image.isChecked = false);\n      }\n\n      state.isSelected = state.images.some(image => image.isChecked === true);\n    },\n\n    updateSearchTerm(state, action) {\n      const searchTerm = action.payload;\n      state.searchTerm = searchTerm;\n    },\n\n    updateImgToSelected(state, action) {\n      const id = action.payload;\n      const existingImg = state.images.find(image => image.id === id);\n      existingImg.isChecked = !existingImg.isChecked;\n      state.isSelected = state.images.some(image => image.isChecked === true);\n    },\n\n    sortByTitle(state) {\n      state.images = state.images.sort((image1, image2) => {\n        if (image1.description === null) return -1;else if (image2.description === null) return 1;else {\n          return image1.description.split(' ')[0] - image2.description.split(' ')[0];\n        }\n      });\n    },\n\n    sortByDate(state) {\n      state.images = state.images.sort((image1, image2) => new Date(image1.date) - new Date(image2.date));\n    },\n\n    sortBySize(state) {\n      state.images = state.images.sort((image1, image2) => image1.height * image2.width - image2.height * image2.width);\n    }\n\n  }\n});\nexport const galleryActions = gallerySlice.actions;\nexport default gallerySlice;","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/img-managememt-app-main/src/store/images-slice.js"],"names":["createSlice","galleryInitialState","images","dummyImages","searchTerm","selectAll","isSelected","gallerySlice","name","initialState","reducers","addToGallery","state","action","newImage","payload","existingImage","find","image","id","push","url","description","height","width","date","isChecked","addToDummyGallery","console","log","removeImgFromGallery","filter","updateSelectAll","forEach","some","updateSearchTerm","updateImgToSelected","existingImg","sortByTitle","sort","image1","image2","split","sortByDate","Date","sortBySize","galleryActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst galleryInitialState = { images: [], dummyImages, searchTerm: \"\", selectAll: false, isSelected: false };\r\n\r\nconst gallerySlice = createSlice({\r\n    name: 'gallery',\r\n    initialState : galleryInitialState,\r\n    reducers : {\r\n        addToGallery(state, action) {\r\n            const newImage = action.payload;\r\n           // console.log(newImage);\r\n            const existingImage = state.images.find(image=> image.id === newImage.id);\r\n            if(!existingImage) {\r\n                state.images.push({\r\n                    id: newImage.id,\r\n                    url: newImage.url,\r\n                    name: newImage.name,\r\n                    description: newImage.description,\r\n                    height: newImage.height,\r\n                    width: newImage.width,\r\n                    date: newImage.date,\r\n                    isChecked: newImage.isChecked\r\n                });\r\n            }\r\n        },\r\n        addToDummyGallery(state, action) {\r\n           console.log(action.payload)\r\n            state.dummyImages.push(action.payload) },\r\n    \r\n        removeImgFromGallery(state) {\r\n            state.images = state.images.filter(image => image.isChecked !== true);\r\n        },\r\n        updateSelectAll(state) {\r\n            state.selectAll = !state.selectAll;\r\n                \r\n            if(state.selectAll) {\r\n                state.images.forEach(image => image.isChecked = true);\r\n            } else {\r\n                state.images.forEach(image => image.isChecked = false);\r\n            }\r\n            state.isSelected = state.images.some(image => image.isChecked === true);\r\n        },\r\n\r\n        updateSearchTerm(state, action) {\r\n            const searchTerm = action.payload;\r\n            state.searchTerm = searchTerm;\r\n        },\r\n\r\n        updateImgToSelected(state, action) {\r\n            const id = action.payload;\r\n            const existingImg = state.images.find(image => image.id === id);\r\n            existingImg.isChecked = !existingImg.isChecked;\r\n            state.isSelected = state.images.some(image => image.isChecked === true);\r\n        },\r\n\r\n\r\n      \r\n        sortByTitle(state) {\r\n            state.images = state.images.sort((image1, image2) => {\r\n                if(image1.description === null) return -1;\r\n                else if(image2.description === null) return 1;\r\n                else {\r\n                    return image1.description.split(' ')[0] - image2.description.split(' ')[0];\r\n                }\r\n                \r\n            })\r\n        },\r\n        sortByDate(state) {\r\n            state.images = state.images.sort((image1, image2) => new Date(image1.date) - new Date(image2.date));\r\n        },\r\n        sortBySize(state) {\r\n            state.images = state.images.sort((image1, image2) => (image1.height * image2.width) - (image2.height * image2.width));\r\n        }\r\n    }\r\n})\r\nexport const galleryActions = gallerySlice.actions;\r\nexport default gallerySlice;"]},"metadata":{},"sourceType":"module"}