{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhananjay srinivas\\\\Desktop\\\\REACT\\\\img-managememt-app-main\\\\src\\\\components\\\\Image\\\\SearchMediaLayout.js\",\n    _s = $RefreshSig$();\n\nimport Image from './Image';\nimport ImageLarge from './ImageLarge';\nimport classes from './SearchMediaLayout.module.css';\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport { galleryActions } from \"../../store/images-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMediaLayout = _ref => {\n  _s();\n\n  let {\n    searchTerm\n  } = _ref;\n  const dispatch = useDispatch();\n  const [loadedImages, setLoadedImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState('');\n\n  const fetchImages = () => {\n    (async () => {\n      const baseUrl = 'https://api.unsplash.com/search/photos?client_id=8tIIkbGFrxgSQQ9mOkHiXhbenY2VNescsdy2HYcljVs&per_page=15&query=';\n      const response = await fetch(baseUrl + `${searchTerm}`);\n      const responseJson = await response.json();\n      const responseData = responseJson.results;\n      setLoadedImages(responseData.map(_ref2 => {\n        let {\n          id,\n          urls: {\n            thumb,\n            regular\n          },\n          description,\n          height,\n          width,\n          created_at\n        } = _ref2;\n        return {\n          id: id,\n          url: thumb,\n          url_regular: regular,\n          name: DOG,\n          description: description,\n          height: height,\n          width: width,\n          date: created_at,\n          isChecked: false\n        };\n      }));\n    })().catch(err => {\n      console.error(err);\n    });\n  };\n\n  useEffect(() => {\n    setSelectedImage('');\n\n    if (searchTerm) {\n      fetchImages();\n    }\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.conatiner,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.media,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.row,\n        children: [selectedImage && /*#__PURE__*/_jsxDEV(ImageLarge, {\n          showSelectButton: false,\n          isChecked: false,\n          name: selectedImage.name,\n          id: selectedImage.id,\n          url: selectedImage.url_regular,\n          description: selectedImage.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), !selectedImage && (searchTerm ? loadedImages.length === 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Uh-oh! Nothing to show.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this) : loadedImages.map(img => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            showSelectButton: false,\n            id: img.id,\n            name: img.name,\n            description: img.description,\n            height: img.height,\n            width: img.width,\n            url: img.url,\n            isChecked: img.isChecked,\n            onClick: () => {\n              dispatch(galleryActions.addToGallery(img));\n              setSelectedImage(img);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)\n        }, img.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Make a search to get started!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SearchMediaLayout, \"XeduGVccHpmjKXtDrD5GIdLuS5s=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchMediaLayout;\nexport default SearchMediaLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMediaLayout\");","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/img-managememt-app-main/src/components/Image/SearchMediaLayout.js"],"names":["Image","ImageLarge","classes","useEffect","useState","Card","galleryActions","useDispatch","SearchMediaLayout","searchTerm","dispatch","loadedImages","setLoadedImages","selectedImage","setSelectedImage","fetchImages","baseUrl","response","fetch","responseJson","json","responseData","results","map","id","urls","thumb","regular","description","height","width","created_at","url","url_regular","name","DOG","date","isChecked","catch","err","console","error","conatiner","media","row","length","img","addToGallery"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;AAEA,MAAMC,iBAAiB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AACxC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMW,WAAW,GAAG,MAAM;AACtB,KAAC,YAAY;AACT,YAAMC,OAAO,GAAG,iHAAhB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,GAAE,GAAEP,UAAW,EAAvB,CAA5B;AACA,YAAMU,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,YAAMC,YAAY,GAAGF,YAAY,CAACG,OAAlC;AACAV,MAAAA,eAAe,CAACS,YAAY,CAACE,GAAb,CAAiB,SAA0E;AAAA,YAAzE;AAACC,UAAAA,EAAD;AAAKC,UAAAA,IAAI,EAAE;AAACC,YAAAA,KAAD;AAAQC,YAAAA;AAAR,WAAX;AAA6BC,UAAAA,WAA7B;AAA0CC,UAAAA,MAA1C;AAAkDC,UAAAA,KAAlD;AAAyDC,UAAAA;AAAzD,SAAyE;AACvG,eAAO;AACHP,UAAAA,EAAE,EAAEA,EADD;AAEHQ,UAAAA,GAAG,EAAEN,KAFF;AAGHO,UAAAA,WAAW,EAAEN,OAHV;AAIHO,UAAAA,IAAI,EAAEC,GAJH;AAKHP,UAAAA,WAAW,EAAEA,WALV;AAMHC,UAAAA,MAAM,EAAEA,MANL;AAOHC,UAAAA,KAAK,EAAEA,KAPJ;AAQHM,UAAAA,IAAI,EAAEL,UARH;AASHM,UAAAA,SAAS,EAAE;AATR,SAAP;AAWH,OAZe,CAAD,CAAf;AAaH,KAlBD,IAkBKC,KAlBL,CAkBWC,GAAG,IAAI;AAEdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KArBD;AAsBH,GAvBD;;AA0BApC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;;AACA,QAAIL,UAAJ,EAAgB;AACZM,MAAAA,WAAW;AACd;AACJ,GALQ,EAKN,CAACN,UAAD,CALM,CAAT;AAOA,sBACF;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACwC,SAAxB;AAAA,2BACM;AAAS,MAAA,SAAS,EAAExC,OAAO,CAACyC,KAA5B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEzC,OAAO,CAAC0C,GAAxB;AAAA,mBACK/B,aAAa,iBACd,QAAC,UAAD;AAAY,UAAA,gBAAgB,EAAE,KAA9B;AAAqC,UAAA,SAAS,EAAE,KAAhD;AAAuD,UAAA,IAAI,EAAEA,aAAa,CAACqB,IAA3E;AAAiF,UAAA,EAAE,EAAErB,aAAa,CAACW,EAAnG;AAAuG,UAAA,GAAG,EAAEX,aAAa,CAACoB,WAA1H;AAAuI,UAAA,WAAW,EAAEpB,aAAa,CAACe;AAAlK;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIK,CAACf,aAAD,KAAmBJ,UAAU,GAAGE,YAAY,CAACkC,MAAb,KAAwB,CAAxB,gBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADsB,GAEvBlC,YAAY,CAACY,GAAb,CAAiBuB,GAAG,iBAClB,QAAC,IAAD;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,gBAAgB,EAAE,KADtB;AAEI,YAAA,EAAE,EAAEA,GAAG,CAACtB,EAFZ;AAGI,YAAA,IAAI,EAAEsB,GAAG,CAACZ,IAHd;AAII,YAAA,WAAW,EAAEY,GAAG,CAAClB,WAJrB;AAKI,YAAA,MAAM,EAAEkB,GAAG,CAACjB,MALhB;AAMI,YAAA,KAAK,EAAEiB,GAAG,CAAChB,KANf;AAOI,YAAA,GAAG,EAAEgB,GAAG,CAACd,GAPb;AAQI,YAAA,SAAS,EAAEc,GAAG,CAACT,SARnB;AASI,YAAA,OAAO,EAAE,MAAM;AACX3B,cAAAA,QAAQ,CAACJ,cAAc,CAACyC,YAAf,CAA4BD,GAA5B,CAAD,CAAR;AACAhC,cAAAA,gBAAgB,CAACgC,GAAD,CAAhB;AACH;AAZL;AAAA;AAAA;AAAA;AAAA;AADJ,WAAWA,GAAG,CAACtB,EAAf;AAAA;AAAA;AAAA;AAAA,gBADF,CAFoB,gBAmBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBN,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADE;AAgCH,CArED;;GAAMhB,iB;UACeD,W;;;KADfC,iB;AAwEN,eAAeA,iBAAf","sourcesContent":["import Image from './Image';\r\nimport ImageLarge from './ImageLarge';\r\nimport classes from './SearchMediaLayout.module.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport {galleryActions} from \"../../store/images-slice\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst SearchMediaLayout = ({searchTerm}) => {\r\n    const dispatch = useDispatch();\r\n    const [loadedImages, setLoadedImages] = useState([])\r\n    const [selectedImage, setSelectedImage] = useState('')\r\n    const fetchImages = () => {\r\n        (async () => {\r\n            const baseUrl = 'https://api.unsplash.com/search/photos?client_id=8tIIkbGFrxgSQQ9mOkHiXhbenY2VNescsdy2HYcljVs&per_page=15&query='\r\n            const response = await fetch(baseUrl+`${searchTerm}`);\r\n            const responseJson = await response.json();\r\n            const responseData = responseJson.results;\r\n            setLoadedImages(responseData.map(({id, urls: {thumb, regular}, description, height, width, created_at}) => {\r\n                return {\r\n                    id: id,\r\n                    url: thumb,\r\n                    url_regular: regular,\r\n                    name: DOG,\r\n                    description: description,\r\n                    height: height,\r\n                    width: width,\r\n                    date: created_at,\r\n                    isChecked: false\r\n                }\r\n            }))\r\n        })().catch(err => {\r\n            \r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setSelectedImage('')\r\n        if (searchTerm) {\r\n            fetchImages()\r\n        }\r\n    }, [searchTerm])\r\n\r\n    return (\r\n\t\t<div className={classes.conatiner}>\r\n        <section className={classes.media}>\r\n            <div className={classes.row}>\r\n                {selectedImage &&\r\n                <ImageLarge showSelectButton={false} isChecked={false} name={selectedImage.name} id={selectedImage.id} url={selectedImage.url_regular} description={selectedImage.description} />\r\n                }\r\n                {!selectedImage && (searchTerm ? loadedImages.length === 0\r\n                        ? (<h4>Uh-oh! Nothing to show.</h4>)\r\n                        : loadedImages.map(img => (\r\n                            <Card key={img.id}>\r\n                                <Image\r\n                                    showSelectButton={false}\r\n                                    id={img.id}\r\n                                    name={img.name}\r\n                                    description={img.description}\r\n                                    height={img.height}\r\n                                    width={img.width}\r\n                                    url={img.url}\r\n                                    isChecked={img.isChecked}\r\n                                    onClick={() => {\r\n                                        dispatch(galleryActions.addToGallery(img))\r\n                                        setSelectedImage(img)\r\n                                    }}\r\n                                />\r\n                            </Card>))\r\n                    : (<h4>Make a search to get started!!!</h4>))\r\n                }\r\n            </div>\r\n        </section>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchMediaLayout;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}